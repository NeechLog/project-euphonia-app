{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Upload Sample",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api/gcloudAdapter/gcp_sample_cli.py",
            "args": [
                "--bucket", "${input:gcsBucket}",
                "--verbose",
                "upload",
                "${input:sampleId}",
                "${input:textFile}",
                "${input:voiceFile}",

            ],
            "console": "integratedTerminal",
            "justMyCode": true,
        },
        {
            "name": "Download Sample",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api/gcloudAdapter/gcp_sample_cli.py",
            "args": [
                "--bucket", "${input:gcsBucket}",
                "download",
                "${input:sampleId}",
                "--output-dir", "${workspaceFolder}/downloads"
            ],
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "List Sample Versions",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api/gcloudAdapter/gcp_sample_cli.py",
            "args": [
                "--bucket", "${input:gcsBucket}",
                "list",
                "${input:sampleId}"
            ],
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Generate Speech",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api/gcloudAdapter/gcp_sample_cli.py",
            "args": [
                "generate",
                "${input:textToSpeak}",
                "${workspaceFolder}/output.wav",
                "--temperature", "0.7"
            ],
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Clone Voice",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api/gcloudAdapter/gcp_sample_cli.py",
            "args": [
                "--bucket", "${input:gcsBucket}",
                "clone-voice",
                "${input:textToSpeak}",
                "gs://${input:gcsBucket}/${input:voiceSamplePath}",
                "${input:transcriptText}",
                "${workspaceFolder}/cloned_voice.wav"
            ],
            "console": "integratedTerminal",
            "justMyCode": true
        }
    ],
    "inputs": [
        {
            "id": "gcsBucket",
            "type": "promptString",
            "description": "Enter GCS bucket name",
            "default": "euphonia-dia"
        },
        {
            "id": "gcpCredentials",
            "type": "promptString",
            "description": "Path to GCP credentials JSON file",
            "default": "${env:HOME}/.config/gcloud/application_default_credentials.json"
        },
        {
            "id": "sampleId",
            "type": "promptString",
            "description": "Sample ID (hash_id)",
            "default": "sample_${input:randomNumber}"
        },
        {
            "id": "textFile",
            "type": "promptString",
            "description": "Path to text file",
            "default": "/Users/gagan/projects/work/project-euphonia-app/assets/suresh_initial_sample.txt"
        },
        {
            "id": "voiceFile",
            "type": "promptString",
            "description": "Path to voice file",
            "default": "/Users/gagan/projects/work/project-euphonia-app/assets/suresh_initial_sample.mp3"
        },
        {
            "id": "randomNumber",
            "type": "promptString",
            "description": "Random number for versioning (leave empty for auto-generate)",
            "default": ""
        },
        {
            "id": "textToSpeak",
            "type": "promptString",
            "description": "Text to convert to speech",
            "default": "This is a test text to be converted to speech."
        },
        {
            "id": "voiceSamplePath",
            "type": "promptString",
            "description": "Path to voice sample in GCS (without gs://bucket/)",
            "default": "default_user_123/converted_audio_voice_0.wav"
        },
        {
            "id": "transcriptText",
            "type": "promptString",
            "description": "Transcript of the voice sample",
           // "default": "Hi, I am Suresh Kabra, founder of clk2c.com and in this brief video, which you should be watching on your mobile, I will explain to you that how my company can help you to scale business and acquire new customers by showing your video advertisement directly on your mobile. Let me illustrate with an example. We just did a mobile video campaign for one of the largest real estate companies in India. This is how their video advertisement plays on my handset. Now that this brand has found a permanent place in my mobile, I can play their video advertisement at any time, at my own convenience, at any place. It is not just about showing your video advertisement on the mobile, we know much more. The brand advertising gets to know who and from where have downloaded their mobile video. This data is available in real time on our server as qualified leads. Not just video advertisement, we can enable you to send your business invitations or personal invitations, like wedding cards, to your guest directly as video on mobile. Just like you are watching clk2c.com promotion on your handset, your customers could be watching your brand promotion on their handsets."
            "default": "These changes make the function more predictable for testing while still allowing for customization through environment variables when needed. The default values can be easily modified by changing the constants at the top of the function."
        },
    ]
}
